- name: Check mysql pod status
  k8s_facts:
    host: "{{ url }}"
    api_key: "{{ token }}"
    verify_ssl: no
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors: "name=postgresql"
    field_selectors: 
    - status.phase=Running
  register: psqlpod
  until: "true in (psqlpod | json_query('resources[].status.containerStatuses[].ready'))"
  retries: 60

- name: Check application pod status
  k8s_facts:
    host: "{{ url }}"
    api_key: "{{ token }}"
    verify_ssl: no
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors: "name=django-psql-persistent"
    field_selectors: 
    - status.phase=Running
  register: apppod
  until: "true in (apppod | json_query('resources[].status.containerStatuses[].ready'))"
  retries: 60

- name: Get route
  k8s_facts:
    host: "{{ url }}"
    api_key: "{{ token }}"
    verify_ssl: no
    kind: Route
    namespace: "{{ namespace }}"
    label_selectors: "app=django-psql-persistent"
  register: app_route
  until: app_route.resources | length > 0
  delay: 10
  retries: 30

- name: Access the html file
  uri:
    url: http://{{ app_route.resources[0].spec.host }}
    method: GET
    status_code: 200
    return_content: true
  register: page_content

# /health uri will return the number of visits that the database has stored
- name: Get num visits up to now
  uri:
    url: http://{{ app_route.resources[0].spec.host }}/health
    method: GET
    status_code: 200
    return_content: true
  register:  django_num_visits
  until: django_num_visits.status == 200

- name: Check num visits
  fail:
    msg: "Num visits has not the expected value. It should be {{ num_visits + 1 }} and the value retrieved was {{ fact_cake_num_visits }}"
  when: django_num_visits.content|int != (num_visits|int + 1)
